@model Docomb.WebReader.ViewModels.DirectoryList
@using Docomb.ContentStorage
@{
	Layout = "~/Areas/Reader/Pages/Shared/_Layout.cshtml";
}

<div class="pageContent">
	@{ List<ContentItemSummary> children = ViewBag.Context?.Workspace?.Content?.GetChildren(ViewBag.Context?.PathParts); }
	@if (children?.Count > 0)
	{
		<ul class="directoryChildSelection">
			@foreach (ContentItemSummary child in children)
			{
				string icon = "file-empty";
				if ((child.Type == ContentItemType.Directory) || (child.NeedsTrailingSlash))
				{ icon = "folder"; }
				else
				{
					var file = child.GetFile();
					icon = file?.FileType switch
					{
						FileType.Markdown => "file-text2",
						FileType.PlainText => "file-text2",
						FileType.Html => "file-text2",
						FileType.BitmapImage => "file-picture",
						FileType.VectorImage => "file-picture",
						_ => "file-empty"
					};
					switch (Docomb.CommonCore.Utils.GetFileExtension(child.FullUrl)?.ToLower())
					{
						case "doc": case "docx": { icon = "file-word"; break; }
						case "xls": case "xlsx": { icon = "file-excel"; break; }
						case "ppt": case "pptx": { icon = "file-play"; break; }
						case "pdf": { icon = "file-pdf"; break; }
						case "zip": case "zipx": case "rar": case "gz": case "gzip": case "7z": case "tar": case "iso": case "lz": { icon = "file-zip"; break; }
					}
				}
				icon = $"<i class=\"icon-{icon}\"></i> ";
				<li><a href="@child.FullUrl">@Html.Raw(icon)@child.Title</a></li>
			}
		</ul>
	}
</div>

